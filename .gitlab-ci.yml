image: alpine:3.18.4

stages:
  - install_dependencies
  - production_build
  - docker_image_build_development
  - deploy_to_development

variables:
  KUBECONFIG: /root/.kube/config
  KANIKO_VERSION: "debug"

.variables: &pipe_vars
  variables:
    KUBERNETES_CPU_REQUEST: 4
    KUBERNETES_CPU_LIMIT: 4
    KUBERNETES_MEMORY_REQUEST: 20Gi
    KUBERNETES_MEMORY_LIMIT: 20Gi

before_script:
  - apk add --update npm git jq

install_dependencies:
  <<: *pipe_vars
  stage: install_dependencies
  cache:
    key: $CI_DEFAULT_BRANCH
    paths:
      - node_modules/
  script:
    - npm install -g npm@latest
    - npm -version
    - npm ci
  only:
    refs:
      - main
    changes:
      - package-lock.json

production_build:
  <<: *pipe_vars
  stage: production_build
  only:
    - main
  cache:
    key: $CI_DEFAULT_BRANCH
    paths:
      - node_modules/
    policy: pull
  script:
    - npm run build
  artifacts:
    paths:
      - .next/
    expire_in: 1 week

docker_image_build_development:
  <<: *pipe_vars
  image: quay.io/buildah/stable:v1.31.0
  stage: docker_image_build_development
  variables:
    STORAGE_DRIVER: vfs
    BUILDAH_FORMAT: docker
    BUILDAH_ISOLATION: chroot
    FQ_IMAGE_NAME: "$CI_REGISTRY_IMAGE:latest"
  only:
    - main
  before_script:
    - echo $CI_REGISTRY_PASSWORD | buildah login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - buildah build --ulimit nofile=4096:4096 -t $FQ_IMAGE_NAME
    - buildah push $FQ_IMAGE_NAME

deploy_to_development:
  <<: *pipe_vars
  image: dtzar/helm-kubectl
  stage: deploy_to_development
  only:
    - main
  before_script:
    - sed -ie "s/deploy-date-value/$(date)/g" kubernetes/development.yaml
    - mkdir -p /root/.kube/ && touch $KUBECONFIG
    - echo $KUBERNETES_KUBE_CONFIG | base64 -d > $KUBECONFIG
  script:
    - kubectl apply -f kubernetes/development.yaml
